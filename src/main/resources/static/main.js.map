{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/task-create/task-create.component.css","webpack:///./src/app/task-create/task-create.component.html","webpack:///./src/app/task-create/task-create.component.ts","webpack:///./src/app/task-detail/task-detail.component.css","webpack:///./src/app/task-detail/task-detail.component.html","webpack:///./src/app/task-detail/task-detail.component.ts","webpack:///./src/app/task-edit/task-edit.component.css","webpack:///./src/app/task-edit/task-edit.component.html","webpack:///./src/app/task-edit/task-edit.component.ts","webpack:///./src/app/task-manager/task-manager.component.css","webpack:///./src/app/task-manager/task-manager.component.html","webpack:///./src/app/task-manager/task-manager.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskManagerComponent } from './task-manager/task-manager.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { TaskCreateComponent } from './task-create/task-create.component';\nimport { TaskEditComponent } from './task-edit/task-edit.component';\nimport { DatePipe } from '@angular/common';\n\nconst appRoutes: Routes = [\n  {\n    path: 'tasks',\n    component: TaskManagerComponent,\n    data: { title: ' Task List' }\n  },\n  {\n    path: 'task-detail/:id',\n    component: TaskDetailComponent,\n    data: { title: 'Task Details' }\n  },\n  {\n    path: 'task-create',\n    component: TaskCreateComponent,\n    data: { title: 'Create Task' }\n  },\n  {\n    path: 'task-edit/:id',\n    component: TaskEditComponent,\n    data: { title: 'Edit Task' }\n  },\n  { path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskManagerComponent,\n    TaskDetailComponent,\n    TaskCreateComponent,\n    TaskEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n\tRouterModule.forRoot(\n    appRoutes,{ enableTracing: true } // <-- debugging purposes only\n  )\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stY3JlYXRlL3Rhc2stY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Add New Task</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form  #taskForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.name\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Priority</label>\\n          <input type=\\\"range\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.priority\\\" name=\\\"priority\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Parent Task Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.parentTaskName\\\" name=\\\"parentTaskName\\\">\\n        </div>\\n\\t\\t \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Start Date</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\" required>\\n        </div>\\n\\t\\t<div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">End Date</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\" (click)=\\\"saveTask()\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-task-create',\n  templateUrl: './task-create.component.html',\n  styleUrls: ['./task-create.component.css']\n})\n\nexport class TaskCreateComponent implements OnInit {\n\n    task = {};\n  \n    constructor(private http: HttpClient, private router: Router) { }\n\n    ngOnInit() {\n\t}\n  \n    saveTask() {\n\t\tthis.http.post('/tasks', this.task)\n\t\t\t.subscribe(res => {\n            this.router.navigate(['/tasks', res]);\n        }, (err) => {\n          console.log(err);\n        });\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZGV0YWlsL3Rhc2stZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>{{ task.name }}</h1>\\n  <dl class=\\\"list\\\">\\n    <dt>Id</dt>\\n    <dd>{{ task.id }}</dd>\\n\\t<dt>Priority</dt>\\n    <dd>{{ task.priority }}</dd>\\n    <dt>Parent Task Name</dt>\\n    <dd>{{ task.parentTaskName }}</dd>\\n    <dt>Parent Task Id</dt>\\n    <dd>{{ task.parentTaskId }}</dd>\\n    <dt>Task Start Date</dt>\\n    <dd>{{ task.startDate }}</dd>\\n\\t<dt>Task End Date</dt>\\n    <dd>{{ task.endDate }}</dd>\\n  </dl>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.css']\n})\nexport class TaskDetailComponent implements OnInit {\n\t\n\ttask = {};\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit() {\n\t  this.getTaskDetail(this.route.snapshot.params['id']);\n  }\n  \n  getTaskDetail(id) {\n    this.http.get('/tasks/'+id).subscribe(data => {\n      this.task = data;\n    });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZWRpdC90YXNrLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Edit Task</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form #taskForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.name\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Priority</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.priority\\\" name=\\\"priority\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Parent Task Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.parentTaskName\\\" name=\\\"parentTaskName\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Start Date</label>\\n          <input type=\\\"Date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\" required>\\n        </div>\\n\\t\\t\\n\\t\\t <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\" (click)=\\\"updateTask(task.id)\\\">Update</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-task-edit',\n    templateUrl: './task-edit.component.html',\n    styleUrls: ['./task-edit.component.css']\n})\n\nexport class TaskEditComponent implements OnInit {\n\n    task = {};\n\n    constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute, private datePipe: DatePipe) { }\n\n    ngOnInit() {\n\t    this.getTask(this.route.snapshot.params['id']);\n    }\n  \n    getTask(id) {\n\t\tthis.http.get('/tasks/'+id).subscribe(data => {\n\t\tthis.task = data;\n\t\tthis.updateDateFormat(this.task);\n        });\n    }\n\n    updateTask(id) {\n\t\tthis.http.post('/tasks/'+id, this.task)\n\t\t.subscribe(res => {\n        let id = res['id'];\n        this.router.navigate(['/tasks', res]);\n        }, (err) => {\n          console.log(err);\n        });\n    }\n  \n    updateDateFormat(task){\n\t    task.startDate = this.datePipe.transform(task.startDate, \"yyyy-MM-dd\");\n    }\t \n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stbWFuYWdlci90YXNrLW1hbmFnZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Task Manager</h1>\\n  <h4><a [routerLink]=\\\"['/task-create']\\\" class=\\\"btn btn-default btn-lg\\\">\\n    <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\">Add Task</span></a>\\n  </h4>\\n  <h4>\\n  <form #taskForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Task Name:</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"task.name\\\" name=\\\"name\\\">\\n        <label for=\\\"name\\\">Parent Task:</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"task.parentTaskName\\\" name=\\\"parentTaskName\\\"><br/>\\n\\t\\t<label for=\\\"name\\\">PriorityFrom:</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"task.priorityFrom\\\" name=\\\"priorityFrom\\\">\\n\\t\\t<label for=\\\"name\\\">PriorityTo:</label>\\n\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"task.priorityTo\\\" name=\\\"priorityTo\\\"><br/>\\n\\t\\t<label for=\\\"name\\\">Start Date:</label>\\n\\t\\t<input type=\\\"date\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\">\\n\\t\\t<label for=\\\"name\\\">End Date:</label>\\n\\t\\t<input type=\\\"date\\\" [(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\" (click)=\\\"searchTask(task)\\\">Search Task</button><br/>\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\" (click)=\\\"clearTasks()\\\">Clear</button>\\n    </div>\\n </form>\\n  </h4>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Priority</th>\\n        <th>ParentTaskName</th>\\n\\t\\t<th>startDate</th>\\n        <th>endDate</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let task of tasks\\\">\\n        <td>{{ task.name }}</td>\\n        <td>{{ task.priority }}</td>\\n        <td>{{ task.parentTaskName }}</td>\\n        <td>{{ task.startDate | date: 'dd/MM/yyyy' }}</td>\\n        <td>{{ task.endDate | date: 'dd/MM/yyyy'}}</td>\\n\\t\\t<td><a [routerLink]=\\\"['/task-detail', task.id]\\\">View Task</a></td>\\n\\t\\t<td><a [routerLink]=\\\"['/task-edit', task.id]\\\">Edit</a></td>\\n\\t\\t<button (click)=\\\"endTask(task.id)\\\">End Task</button>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-task-manager',\n  templateUrl: './task-manager.component.html',\n  styleUrls: ['./task-manager.component.css']\n})\nexport class TaskManagerComponent implements OnInit {\n\t\n    tasks: any;\n    task = {};\n    constructor(private http: HttpClient) { }\n\n    ngOnInit() {\n        this.http.get('/tasks').subscribe(data => {\n        this.tasks = data;\n        });\n    }\n\t\n    endTask(id){\n\t\tthis.http.get('/tasks/endTask/'+id)\n\t\t\t.subscribe(res => {\n\t\t\tlet id = res['id'];\n\t\t\tthis.tasks=res;\n\t\t}, (err) => {\n            console.log(err);\n\t\t});\n    }\n\t\n    searchTask(task){\n\t\tthis.http.post('/tasks/searchTask', this.task)\n\t\t\t.subscribe(res => {\n\t\t\tthis.tasks = res;\n\t\t}, (err) => {\n            console.log(err);\n\t\t});\t      \n\t}\n\t\n \tclearTasks(){\n\t\tthis.task = {};\n\t\tthis.http.get('/tasks').subscribe(data => {\n        this.tasks = data;\n       });\n\t}\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}